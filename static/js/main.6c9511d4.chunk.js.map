{"version":3,"sources":["components/PDFViewer/PDFViewer.module.css","components/TopWrapper/TopWrapper.module.css","components/PDFViewer/PDFViewer.js","resources/documents/JakeSage.pdf","components/Resume/Resume.js","components/TopWrapper/TopWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PDFViewer","props","useState","numPages","setNumPages","pageNumber","setPageNumber","changePage","offset","prevPageNumber","className","classes","container","file","renderMode","onLoadSuccess","scale","pageSelection","type","disabled","onClick","pdfjs","GlobalWorkerOptions","workerSrc","version","resume","resumeFile","topWrapper","Classes","TopBar","Resume","App","TopWrapper","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,cAAgB,mC,mBCA3ED,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,4SCMhD,SAASC,EAAUC,GAAQ,IAAD,EACPC,mBAAS,MADF,mBAChCC,EADgC,KACtBC,EADsB,OAEHF,mBAAS,GAFN,mBAEhCG,EAFgC,KAEpBC,EAFoB,KASvC,SAASC,EAAWC,GAClBF,GAAc,SAAAG,GAAc,OAAIA,EAAiBD,KAWnD,OACE,mCACE,sBAAKE,UAAWC,IAAQC,UAAxB,UACE,cAAC,IAAD,CACEC,KAAMZ,EAAMY,KACZC,WAAW,MACXC,cAvBR,YAA8C,IAAbZ,EAAY,EAAZA,SAC/BC,EAAYD,GACZG,EAAc,IAkBV,SAKE,cAAC,IAAD,CAAMD,WAAYA,EAAYW,MAAO,SAEvC,sBAAKN,UAAWC,IAAQM,cAAxB,UACE,wBACEC,KAAK,SACLC,SAAUd,GAAc,EACxBe,QAtBV,WACEb,GAAY,IAkBN,sBAOA,sCACQF,IAAeF,EAAW,EAAI,MADtC,OACiDA,GAAY,QAE7D,wBACEe,KAAK,SACLC,SAAUd,GAAcF,EACxBiB,QA5BV,WACEb,EAAW,IAwBL,0BA5CVc,IAAMC,oBAAoBC,UAA1B,kDAAiFF,IAAMG,QAAvF,kBCLe,UAA0B,qCCS1BC,EAJA,SAACxB,GAAD,OACX,cAACD,EAAD,CAAWa,KAAOa,K,iBCSPC,EAXI,SAAC1B,GAAD,OACf,gCACI,sBAAKS,UAAWkB,IAAQC,OAAxB,UACI,4CACA,8CACA,sDAEJ,cAACC,EAAD,QCDOC,E,uKAJX,OAAO,cAACC,EAAD,Q,GAFOC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c9511d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PDFViewer_container__mY2hT\",\"pageSelection\":\"PDFViewer_pageSelection__2uL9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBar\":\"TopWrapper_TopBar__3lnJT\",\"Resume\":\"TopWrapper_Resume__3I-5d\"};","import React, { useState } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport classes from './PDFViewer.module.css';\r\n\r\nimport { pdfjs } from 'react-pdf';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport default function PDFViewer(props) {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n    setPageNumber(1);\r\n  }\r\n\r\n  function changePage(offset) {\r\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n  }\r\n\r\n  function previousPage() {\r\n    changePage(-1);\r\n  }\r\n\r\n  function nextPage() {\r\n    changePage(1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <Document\r\n          file={props.file}\r\n          renderMode=\"svg\"\r\n          onLoadSuccess={onDocumentLoadSuccess}\r\n        >\r\n          <Page pageNumber={pageNumber} scale={1.35}/>\r\n        </Document>\r\n        <div className={classes.pageSelection}>\r\n          <button\r\n            type=\"button\"\r\n            disabled={pageNumber <= 1}\r\n            onClick={previousPage}\r\n          >\r\n            Previous\r\n          </button>\r\n          <p>\r\n            Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            disabled={pageNumber >= numPages}\r\n            onClick={nextPage}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/JakeSage.72cef3d0.pdf\";","import React from 'react';\r\nimport PDFViewer from '../PDFViewer/PDFViewer';\r\n\r\nimport resumeFile from '../../resources/documents/JakeSage.pdf';\r\n\r\nconst resume = (props) => (\r\n    <PDFViewer file={ resumeFile }/>\r\n);\r\n\r\nexport default resume;","import React from 'react';\r\nimport Resume from '../Resume/Resume';\r\nimport Classes from './TopWrapper.module.css';\r\n\r\nconst topWrapper = (props) => (\r\n    <div>\r\n        <div className={Classes.TopBar}>\r\n            <button>Resume</button>\r\n            <button>About Me</button>\r\n            <button>Langton's Ant</button>\r\n        </div>\r\n        <Resume/>\r\n    </div>\r\n)\r\n\r\nexport default topWrapper;","import React, { Component } from 'react';\nimport './App.css';\nimport TopWrapper from './components/TopWrapper/TopWrapper';\n\nclass App extends Component {\n  render() {\n    return <TopWrapper/>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}